name: Build and Deploy

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: Install dependencies and build
        env:
          VITE_SERVICE_TYPE: ${{ secrets.VITE_SERVICE_TYPE }}
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_KEY: ${{ secrets.VITE_SUPABASE_KEY }}
        run: |
          # Create .env file with GitHub secrets
          echo "VITE_SERVICE_TYPE=${VITE_SERVICE_TYPE}" >> .env
          echo "" >> .env
          echo "VITE_SUPABASE_URL=${VITE_SUPABASE_URL}" >> .env
          echo "VITE_SUPABASE_KEY=${VITE_SUPABASE_KEY}" >> .env

          # Install dependencies and build
          npm install
          npm run build

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/vvv-admin

      - name: Add SSH Key
        run: |
          echo "${{ secrets.SSH_PEM_KEY }}" > deploy_key.pem
          chmod 600 deploy_key.pem

      - name: Deploy via Docker Compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_ADDRESS }}
          username: ${{ secrets.SERVER_USER }}
          key_path: deploy_key.pem
          script_stop: true
          script: |
            # 检查并安装 Docker Compose（如果未安装）
            if ! command -v docker-compose &> /dev/null; then
              echo "Docker Compose not found, installing..."
              sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
            fi

            # 进入项目目录
            cd /data/dockerCompose/vvv-admin

            # 拉取最新的 Docker 镜像
            docker-compose pull

            # 停止并移除旧的容器
            docker-compose down

            # 启动新的容器
            docker-compose up -d

      - name: Cleanup
        run: rm -f deploy_key.pem
